/**
 * Common Mixins
 *
 * This is a set of useful mixins which will be used frequently.
 *
 * 1. float clearfix
 * 2. position absolute
 * 3. background color variant for buttons or something like them
 * 4. border radius
 * 5. border triangle which is produced by pure CSS
 * 6. breakpoint for responsible pages
 * 7. do something on retina device or normal device (@media)
 * 8. text overflow ellipsis
 * 9. font face
 *
 */




//import relied mixins
@import './css3.sass'


// float clearfix
=clearfix
  &:before,
  &:after
    content: " "
    display: table
  &:after
    clear: both


//absolute position
=abs-pos ($top: auto, $right: auto, $bottom: auto, $left: auto)
  top: $top
  right: $right
  bottom: $bottom
  left: $left
  position: absolute


// background color variant for buttons or something like them
=bg-variant($color)
  background-color: $color
  &:hover
    background-color: darken($color, 10%)


// border radius
=border-top-radius($radius)
  border-top-right-radius: $radius
  border-top-left-radius: $radius

=border-right-radius($radius)
  border-bottom-right-radius: $radius
  border-top-right-radius: $radius

=border-bottom-radius($radius)
  border-bottom-right-radius: $radius
  border-bottom-left-radius: $radius

=border-left-radius($radius)
  border-bottom-left-radius: $radius
  border-top-left-radius: $radius


// border triangle which is produced by pure CSS
=border-triangle($borderWidth, $borderColor, $direction)
  $default-border-style: solid
  width: 0
  height: 0
  overflow: hidden
  border-width: $borderWidth
  border-style: $default-border-style
  _border-style: dashed
  border-color: transparent
  @if ($direction == top)
    border-bottom-color: $borderColor
    _border-bottom-style: $default-border-style
  @if ($direction == right)
    border-left-color: $borderColor
    _border-left-style: $default-border-style
  @if ($direction == bottom)
    border-top-color: $borderColor
    _border-top-style: $default-border-style
  @if ($direction == left)
    border-right-color: $borderColor
    _border-right-style: $default-border-style
  @if ($direction == topleft)
    border-top-color: $borderColor
    border-left-color: $borderColor
    _border-top-style: $default-border-style
    _border-left-style: $default-border-style
  @if ($direction == topright)
    border-top-color: $borderColor
    border-right-color: $borderColor
    _border-top-style: $default-border-style
    _border-right-style: $default-border-style
  @if ($direction == bottomleft)
    border-bottom-color: $borderColor
    border-left-color: $borderColor
    _border-bottom-style: $default-border-style
    _border-left-style: $default-border-style
  @if ($direction == bottomright)
    border-bottom-color: $borderColor
    border-right-color: $borderColor
    _border-bottom-style: $default-border-style
    _border-right-style: $default-border-style


// breakpoint for responsible pages
=breakpoint($point)
  @if $point == large
    @media (min-width: 64.375em)
      @content
  @else if $point == medium
    @media (min-width: 50em)
      @content
  @else if $point == small
    @media (min-width: 37.5em)
      @content


// do something on retina device or normal device (@media)
=device-retina
  @media (-webkit-min-device-pixel-ratio: 2), (min--moz-device-pixel-ratio: 2), (min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)
    @content

=device-normal
  @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6/2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)
    @content


//get 1px 'border' for retina device and hide this 'border'
$retina-border-map: (top: 90deg, right: 0deg, bottom: 270deg, left: 180deg)
=retina-border-1px($color, $direction)
  background-image: -webkit-linear-gradient(map-get($retina-border-map, $direction), transparent, $color 50%)
  background-repeat: no-repeat
  background-position: $direction
  @if $direction == top or $direction == bottom
    background-size: 100% 1px
  @else
    background-size: 1px 100%

=retina-border-none
  background-size: 0px


// text overflow ellipsis
=text-truncate
  overflow: hidden
  text-overflow: ellipsis
  white-space: nowrap


// font face
=font-face($fontName, $noSuffixFontUrl)
  @font-face
    font-family: "#{$fontName}"
    src: url("#{$noSuffixFontUrl}.eot")
    src: url("#{$noSuffixFontUrl}.eot?#iefix") format("embedded-opentype"), url("#{$noSuffixFontUrl}.woff") format("woff"), url("#{$noSuffixFontUrl}.ttf")  format("truetype"), url("#{$noSuffixFontUrl}.svg#svgFontName") format("svg")
